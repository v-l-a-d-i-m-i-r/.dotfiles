# https://github.com/caarlos0/dotfiles.fish/blob/master/tmux/tmux.conf.symlink
# https://github.com/ThePrimeagen/.dotfiles/blob/master/tmux/.tmux.conf
# https://devhints.io/tmux
# https://stackoverflow.com/questions/60309665/neovim-losing-colorscheme-when-in-tmux-all-past-solutions-i-see-dont-work-for
# https://cyfyifanchen.com/neovim-true-color/

# start colors
TMUX_BG_STATUS_STYLE="#3B4252";
TMUX_BG_STATUS_LEFT="#81A1C1";
TMUX_FG_STATUS_LEFT="#2E3440";
TMUX_BG_STATUS_RIGHT="#81A1C1";
TMUX_FG_STATUS_RIGHT="#2E3440";
TMUX_FG_WINDOW_STATUS_CURRENT="#A3BE8C";
TMUX_FG_WINDOW_STATUS_CURRENT_ZOOMED_FLAG="#BF616A";
TMUX_FG_WINDOW_STATUS_STYLE="#acafb4";
TMUX_BG_MODE_STYLE="#434C5E";
# end colors

set -ga terminal-overrides ',xterm-256color:Tc,*:Ss=\E[%p1%d q:Se=\E[1 q'
set -g status-interval 1
set -sg escape-time 1 # quicker responses
set -g base-index 1 # Numbering of windows
set-option -g status-keys vi
set-option -g status-position top
set-option -g focus-events on
set-window-option -g pane-base-index 1 # Numbering of Panes
set-window-option -g mode-keys vi
set-option -g renumber-windows on
set-option -g set-titles on
set-option -g set-titles-string "tmux [#S] #T"

bind r source-file ~/.tmux.conf \; display-message "   Config successfully reloaded!"

# vim-like pane switching
# bind ^ if-shell 'test $(tmux list-panes | wc -l) -gt 1' 'last-pane' 'last-window'
bind ^ last-window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# vim-like pane resizing
bind M-h resize-pane -L 5
bind M-j resize-pane -D 5
bind M-k resize-pane -U 5
bind M-l resize-pane -R 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
  "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
  "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "resize-pane -L 5"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "resize-pane -D 5"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "resize-pane -U 5"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "resize-pane -R 5"

bind-key -T copy-mode-vi M-h resize-pane -L 5
bind-key -T copy-mode-vi M-j resize-pane -D 5
bind-key -T copy-mode-vi M-k resize-pane -U 5
bind-key -T copy-mode-vi M-l resize-pane -R 5

bind '\' split-window -h -c "#{pane_current_path}"	# vertical split (default prefix-%)
bind - split-window -v -c "#{pane_current_path}"	# horizontal split (default prefix-")
bind | split-window -fh -c "#{pane_current_path}"	# vertical split
bind _ split-window -fv -c "#{pane_current_path}"	# horizontal split

bind-key P paste-buffer
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'yank > #{pane_tty}'
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

set -g status-style "bg=${TMUX_BG_STATUS_STYLE}"
set -g status-left-length 85
set -g status-right-length 85
set -g status-left "#[bg=${TMUX_BG_STATUS_LEFT}, fg=${TMUX_FG_STATUS_LEFT}, bold] #S "
set -g status-right "#[bg=${TMUX_BG_STATUS_RIGHT}, fg=${TMUX_FG_STATUS_RIGHT}, bold] #(whoami)@#(hostname) "
set -g window-status-separator ''
set -g window-status-format "[ #I: #W #F]"
set -g window-status-current-format "#[fg=${TMUX_FG_WINDOW_STATUS_CURRENT}][#[fg=${TMUX_FG_WINDOW_STATUS_CURRENT}, bold] #I: #W #{?window_zoomed_flag,#[fg=${TMUX_FG_WINDOW_STATUS_CURRENT_ZOOMED_FLAG}],}#F#[default, fg=${TMUX_FG_WINDOW_STATUS_CURRENT}]]"
set -g window-status-style "fg=${TMUX_FG_WINDOW_STATUS_STYLE}"
set -g mode-style "bg=${TMUX_BG_MODE_STYLE}"
